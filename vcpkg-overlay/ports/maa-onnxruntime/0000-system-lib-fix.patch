diff --git a/cmake/CMakeLists.txt b/cmake/CMakeLists.txt
index 5555fa6..87a99f7 100644
--- a/cmake/CMakeLists.txt
+++ b/cmake/CMakeLists.txt
@@ -39,12 +39,7 @@ include(CMakeDependentOption)
 include(FetchContent)
 include(CheckFunctionExists)
 
-# TODO: update this once all system adapt c++20
-if(CMAKE_SYSTEM_NAME STREQUAL "Darwin")
-set(CMAKE_CXX_STANDARD 20)
-else()
 set(CMAKE_CXX_STANDARD 17)
-endif()
 
 if (MSVC)
   #  Make sure Visual Studio sets __cplusplus macro correctly: https://learn.microsoft.com/en-us/cpp/build/reference/zc-cplusplus
diff --git a/cmake/onnxruntime_providers_dml.cmake b/cmake/onnxruntime_providers_dml.cmake
index 439be882d..dfc061f42 100644
--- a/cmake/onnxruntime_providers_dml.cmake
+++ b/cmake/onnxruntime_providers_dml.cmake
@@ -21,32 +21,9 @@
     target_compile_options(onnxruntime_providers_dml PRIVATE "/wd4100" "/wd4238" "/wd4189" "/wd4702")
   endif()
 
-  if (NOT onnxruntime_USE_CUSTOM_DIRECTML)
-    foreach(file "DirectML.dll" "DirectML.pdb" "DirectML.Debug.dll" "DirectML.Debug.pdb")
-      add_custom_command(TARGET onnxruntime_providers_dml
-        POST_BUILD
-        COMMAND ${CMAKE_COMMAND} -E copy_if_different
-          "${DML_PACKAGE_DIR}/bin/${onnxruntime_target_platform}-win/${file}" $<TARGET_FILE_DIR:onnxruntime_providers_dml>)
-    endforeach()
-  endif()
-
   function(target_add_dml target)
-    if (onnxruntime_USE_CUSTOM_DIRECTML)
-      if (dml_EXTERNAL_PROJECT)
-        # Internal build of DirectML: link against the "DirectML" target.
-        target_link_libraries(${target} PRIVATE DirectML)
-      else()
-        if (dml_LIB_DIR)
-          target_link_libraries(${target} PRIVATE ${dml_LIB_DIR}/DirectML.lib)
-        else()
-          target_link_libraries(${target} PRIVATE DirectML)
-        endif()
-      endif()
-    else()
-      add_dependencies(${target} RESTORE_PACKAGES)
-      target_link_libraries(${target} PRIVATE "${DML_PACKAGE_DIR}/bin/${onnxruntime_target_platform}-win/DirectML.lib")
-        target_compile_definitions(${target} PRIVATE DML_TARGET_VERSION_USE_LATEST)
-    endif()
+    # use directml.lib from Windows SDK
+    target_link_libraries(${target} PRIVATE DirectML)
   endfunction()
 
   target_add_dml(onnxruntime_providers_dml)
